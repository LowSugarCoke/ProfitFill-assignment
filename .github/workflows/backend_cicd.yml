name: Python application test with Github Actions

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.10.4
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.4'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi

    - name: Run pip-audit
      run: pip install pip-audit && pip-audit

    - name: Run Bandit
      run: pip install bandit && bandit -r ./backend

    - name: Set environment variable(backend test database)
      run: echo "DATABASE_URL=sqlite:///./test.db" >> $GITHUB_ENV

    - name: Run Tests
      run: |
        cd backend
        pytest tests
        
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/job-management-backend:${{ github.sha }} ./backend

    - name: Scan Docker Image
      run: |
        docker pull aquasec/trivy:latest
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/root/.cache/ aquasec/trivy:latest image ${{ secrets.DOCKER_USERNAME }}/job-management-backend:${{ github.sha }}

    - name: Push Docker Image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/job-management-backend:${{ github.sha }}
        docker logout
